[{"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\index.js":"1","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\App.js":"2","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Header.js":"3","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\LandingPage.js":"4","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Table.js":"5","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Error.js":"6","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Tree.js":"7","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Create.js":"8","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\NodeCard.js":"9","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Modal.js":"10","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Edit.js":"11","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\React-Table-Components\\ReactTable.js":"12","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\React-Table-Components\\GlobalFilter.js":"13","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\NodeCardContent.js":"14","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\React-Table-Components\\columns.js":"15","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\EditPhoto.js":"16"},{"size":268,"mtime":1612789464566,"results":"17","hashOfConfig":"18"},{"size":787,"mtime":1615496706357,"results":"19","hashOfConfig":"18"},{"size":1537,"mtime":1612882365878,"results":"20","hashOfConfig":"18"},{"size":7031,"mtime":1615044468576,"results":"21","hashOfConfig":"18"},{"size":11983,"mtime":1615562631752,"results":"22","hashOfConfig":"18"},{"size":559,"mtime":1611242115169,"results":"23","hashOfConfig":"18"},{"size":40082,"mtime":1615629537870,"results":"24","hashOfConfig":"18"},{"size":6722,"mtime":1614964916566,"results":"25","hashOfConfig":"18"},{"size":6041,"mtime":1615562591140,"results":"26","hashOfConfig":"18"},{"size":323,"mtime":1611245291875,"results":"27","hashOfConfig":"18"},{"size":23158,"mtime":1615232563793,"results":"28","hashOfConfig":"18"},{"size":2543,"mtime":1612012729195,"results":"29","hashOfConfig":"18"},{"size":380,"mtime":1611103060520,"results":"30","hashOfConfig":"18"},{"size":11178,"mtime":1615629595275,"results":"31","hashOfConfig":"18"},{"size":1349,"mtime":1611249453801,"results":"32","hashOfConfig":"18"},{"size":5456,"mtime":1615562671736,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1igqcrh",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\index.js",[],["68","69"],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\App.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Header.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\LandingPage.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Table.js",["70","71"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport * as $ from \"jquery\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { ReactTable } from \"./React-Table-Components/ReactTable\";\r\nimport Create from \"./Create.js\";\r\nimport Modal from \"./Modal\";\r\nimport Edit from \"./Edit\";\r\nimport NodeCard from \"./NodeCard\";\r\nimport EditPhoto from \"./EditPhoto\";\r\n\r\n// function EditPhotoCondition(props) {\r\n//   if (props.image)\r\n//     return (\r\n//       <EditPhoto\r\n//         node={props.node}\r\n//         update={(obj) => {\r\n//           props.update(obj);\r\n//         }}\r\n//         image={props.image}\r\n//         setImage={(img) => props.setImage(img)}\r\n//       />\r\n//     );\r\n//   return null;\r\n// }\r\n\r\nexport default function Table(props) {\r\n  const [update, setUpdate] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [currentImage, setCurrentImage] = useState(undefined);\r\n\r\n  const [TreeData, setTreeData] = useState([]);\r\n\r\n  //current node/ clicked node state\r\n  const [nodestate, setNodestate] = useState(0);\r\n  const [currentRow, setcurrentRow] = useState();\r\n\r\n  var [radiochecked, setRadiochecked] = useState(true);\r\n  const [datalist, setDatalist] = useState([]);\r\n\r\n  const switchRadio = (val) => {\r\n    if (val.value === \"child\") return setRadiochecked(true);\r\n    return setRadiochecked(false);\r\n  };\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/api/get\").then((result) => {\r\n      setTableData(result.data);\r\n    });\r\n  }, [update]);\r\n\r\n  const updateTable = () => {\r\n    //update => useEffect => update tableData => triggers ReactTable rerender\r\n    setUpdate(update + 1);\r\n  };\r\n\r\n  async function dynamicUpdate(obj) {\r\n    let data = tableData;\r\n\r\n    if (!obj) {\r\n      await setTableData([]);\r\n      await setTableData(data);\r\n      return;\r\n    }\r\n\r\n    //update an edited node\r\n    switch (obj.method) {\r\n      case \"delete\":\r\n        data = data.filter((x) => x.id !== obj.id);\r\n        for (let i = 0; i < data.length; i++) {\r\n          if (data[i.pid === obj.id]) data[i].pid = 0;\r\n          if (obj.isPartner) {\r\n            if (data[i].id === obj.pid) data[i].partnerinfo = undefined;\r\n          }\r\n        }\r\n        toast.success(`Removed ${obj.name}`);\r\n        break;\r\n      case \"create\":\r\n        for (let i = 0; i < data.length; i++) {\r\n          if (obj.id === data[i].id) return false;\r\n          if (obj.isPartner) {\r\n            if (data[i].id === obj.pid) data[i].partnerinfo = obj;\r\n          }\r\n        }\r\n        obj.method = undefined;\r\n        data.push(obj);\r\n        if (obj.name) toast.success(`Added ${obj.name}`);\r\n        break;\r\n      default:\r\n        for (let i = 0; i < data.length; i++) {\r\n          if (data[i].id === obj.id) data[i] = obj;\r\n          if (obj.isPartner) {\r\n            if (data[i].id === obj.pid) data[i].partnerinfo = obj;\r\n          } else\r\n            try {\r\n              if (data[i].partnerinfo.id === obj.id)\r\n                data[i].partnerinfo = undefined;\r\n              for (let x = 0; x < data.length; x++) {\r\n                if (data[x].oldpid === obj.id) data[x].pid = obj.id;\r\n              }\r\n            } catch {}\r\n        }\r\n        toast.success(`Changes made to ${obj.name}`);\r\n        break;\r\n    }\r\n    await setTableData([]);\r\n    setTimeout(() => {\r\n      setTableData(data);\r\n    }, 150);\r\n  }\r\n\r\n  const populateEditFields = (inputNode) => {\r\n    let node = getNode(inputNode.id),\r\n      opStack = [\r\n        \"birthplace\",\r\n        \"location\",\r\n        \"extranames\",\r\n        \"fblink\",\r\n        \"profession\",\r\n        \"languages\",\r\n      ];\r\n\r\n    $(\"#generation-input\").val(node.generation);\r\n    $(\"#name-input\").val(node.name);\r\n    $(\"#birthdate-input\").val(node.birthdate);\r\n\r\n    node.deathdate\r\n      ? $(\"#isDeceased\").attr(\"checked\", true)\r\n      : $(\"#isDeceased\").attr(\"checked\", false);\r\n\r\n    $(\"#deathdate-input\")\r\n      .css(\"display\", node.deathdate ? \"block\" : \"none\")\r\n      .val(node.deathdate ? node.deathdate : \"\");\r\n\r\n    $(\"#parentInput\").val(node.isPartner ? node.partner : node.parent);\r\n\r\n    try {\r\n      if (node.isPartner) {\r\n        $(\"#maidenname-input\").css(\"display\", \"block\");\r\n        $(\"label.maidenname\").css(\"display\", \"block\");\r\n        try {\r\n          $(\"#maidenname-input\").val(node.extradetails.maidenname);\r\n        } catch {}\r\n      } else {\r\n        $(\"#maidenname-input\").css(\"display\", \"none\").val(\"\");\r\n        $(\"label.maidenname\").css(\"display\", \"none\");\r\n      }\r\n\r\n      for (const x of opStack) {\r\n        $(`#${x}-input`).val(node.extradetails[x]);\r\n      }\r\n      $(\"textarea.description-input\").val(node.extradetails.description);\r\n    } catch {\r\n      for (const x of opStack) {\r\n        $(`#${x}-input`).val(\"\");\r\n      }\r\n      $(\"textarea.description-input\").val(\"\");\r\n    }\r\n  };\r\n\r\n  const getNode = (idKey) => {\r\n    for (var i = 0; i < tableData.length; i++) {\r\n      if (tableData[i].id === idKey) {\r\n        return tableData[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  const getPID = (nameKey) => {\r\n    for (var i = 0; i < tableData.length; i++) {\r\n      let namecheck = tableData[i].generation + \" \" + tableData[i].name;\r\n      if ($.trim(namecheck) === $.trim(nameKey)) {\r\n        return tableData[i].id;\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetCreateFields = () => {\r\n    let str = \"\";\r\n    let temparr = [];\r\n    let list = document.getElementById(\"parentSearchDataList\");\r\n    //populate parentSearchDataList\r\n    for (const x of tableData) {\r\n      temparr.push(`${x.generation} ${x.name}`);\r\n    }\r\n    for (var i = 0; i < temparr.length; ++i) {\r\n      str += '<option value=\"' + temparr[i] + '\" />';\r\n    }\r\n    list.innerHTML = str;\r\n    try {\r\n      $(\"#toggle-slide\").checked = false;\r\n      $(\"div.Create\").css(\"display\", \"block\");\r\n      $(\"#Modal\").css(\"display\", \"block\");\r\n      $(\"#nameInputC\")\r\n        .attr(\"placeholder\", \"\")\r\n        .val(\"\")\r\n        .css(\"border-bottom\", \"2px solid #bebed2\");\r\n      $(\"#genInputC\").val(\"\");\r\n      $(\"#birthdateInputC\").val(\"\");\r\n      $(\"#parentInputC\")\r\n        .val(\"\")\r\n        .css(\"border-bottom\", \"2px solid #bebed2\")\r\n        .attr(\"placeholder\", \"\");\r\n    } catch {}\r\n  };\r\n\r\n  const removeChildren = (id, arr) => {\r\n    let children = arr.filter((x) => {\r\n      return x.pid === Number(id);\r\n    });\r\n    arr = arr.filter((x) => {\r\n      return x.pid !== Number(id);\r\n    });\r\n    arr = arr.filter((x) => {\r\n      return x.isPartner !== 1;\r\n    });\r\n    try {\r\n      if (children.length > 0) {\r\n        for (let i = 0; i < children.length; i++) {\r\n          arr = removeChildren(children[i].id, arr);\r\n        }\r\n      }\r\n    } catch {}\r\n    return arr;\r\n  };\r\n\r\n  const openNode = (row) => {\r\n    $(\"#parentInput\").css(\"border-bottom\", \"2px solid #bebed2\");\r\n    $(\"#parentInput\").val(\"\");\r\n    $(\"#parentInput\").attr(\"placeholder\", \"Parent/Partner\");\r\n    let str,\r\n      id = \"\";\r\n    let list = document.getElementById(\"parentSearchDataList\");\r\n    //populate parentSearchDataList\r\n    let temparr = tableData;\r\n    try {\r\n      if (nodestate.isPartner === 1) {\r\n        id = null;\r\n        for (let i = 0; i < tableData.length; i++) {\r\n          let name = `${tableData[i].generation} ${tableData[i].name}`;\r\n          if (nodestate.partner === name) {\r\n            id = tableData[i].id;\r\n          } else {\r\n            if (nodestate.partner === tableData[i].name) id = tableData[i].id;\r\n          }\r\n        }\r\n      } else id = nodestate.id;\r\n    } catch {\r\n      id = nodestate.id;\r\n    }\r\n    temparr = removeChildren(id, temparr);\r\n    setDatalist(temparr);\r\n    for (var i = 0; i < temparr.length; ++i) {\r\n      str +=\r\n        '<option value=\"' +\r\n        temparr[i].generation +\r\n        \" \" +\r\n        temparr[i].name +\r\n        '\" />';\r\n    }\r\n    list.innerHTML = str;\r\n\r\n    //only runs if its a database entry\r\n    if (\r\n      !isNaN(row.firstChild.textContent) &&\r\n      row.firstChild.textContent !== \"0\"\r\n    ) {\r\n      nodestate.isPartner ? setRadiochecked(false) : setRadiochecked(true);\r\n      //sort out edit menu\r\n      populateEditFields(nodestate);\r\n      $(\"#Modal\").css(\"display\", \"block\");\r\n      $(\"#editForm\").css(\"display\", \"block\");\r\n      $(\"div.edit-container\").css(\"display\", \"flex\");\r\n    }\r\n  };\r\n\r\n  const showNode = (row) => {\r\n    try {\r\n      let tempData = tableData;\r\n      let partners = tempData.filter((x) => x.isPartner === 1);\r\n      tempData = tempData.filter((x) => x.isPartner !== 1);\r\n      for (let i = 0; i < partners.length; i++) {\r\n        //get name of parent node\r\n        //make partner object an attribute of parent node (partnerinfo)\r\n        for (let x = 0; x < tempData.length; x++) {\r\n          if (tempData[x].id === partners[i].pid) {\r\n            tempData[x].partnerinfo = partners[i];\r\n          }\r\n        }\r\n      }\r\n      setTreeData(tempData);\r\n\r\n      //only runs if its a database entry\r\n      if (\r\n        !isNaN(row.firstChild.textContent) &&\r\n        row.firstChild.textContent !== \"0\"\r\n      ) {\r\n        setcurrentRow(row);\r\n        $(\"#card-container\").css(\"display\", \"block\");\r\n        //update current node json object\r\n        setNodestate(getNode(Number(row.firstChild.textContent)));\r\n      }\r\n    } catch {}\r\n  };\r\n\r\n  const closePopups = () => {\r\n    $(\"div.Create\").css(\"display\", \"none\");\r\n    $(\"#editForm\").css(\"display\", \"none\");\r\n    $(\"#deleteConfirmMenu\").css(\"display\", \"none\");\r\n    $(\"div.edit-container\").css(\"display\", \"none\");\r\n  };\r\n  $(\"#nav-link-two\").removeClass(\"active\");\r\n  $(\"#nav-link-one\").removeClass(\"active\");\r\n  $(\"#nav-link-one\").addClass(\"active\");\r\n  $(\"ul.header-navigation\").removeClass(\"hidden\");\r\n\r\n  return (\r\n    <div className=\"TableContainer\">\r\n      <div className=\"container\">\r\n        <div className=\"container-top\">\r\n          <div className=\"left\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"refresh-table\"\r\n              onClick={() => {\r\n                updateTable();\r\n              }}\r\n            >\r\n              ⟳\r\n            </button>\r\n          </div>\r\n          <div className=\"right\">\r\n            <button id=\"createNew\" onClick={resetCreateFields}>\r\n              New Family Member\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-body\">\r\n          <ReactTable data={tableData} open={openNode} show={showNode} />\r\n        </div>\r\n      </div>\r\n      <Modal close={closePopups} />\r\n      <Create\r\n        data={tableData}\r\n        getPID={getPID}\r\n        update={(obj) => {\r\n          dynamicUpdate(obj);\r\n        }}\r\n      />\r\n      <Edit\r\n        toast={(msg) => toast.error(msg)}\r\n        getPID={getPID}\r\n        getNode={(id) => getNode(id)}\r\n        radiochecked={radiochecked}\r\n        switchRadio={(val) => switchRadio(val)}\r\n        data={tableData}\r\n        datalist={datalist}\r\n        nodedata={nodestate}\r\n        update={(obj) => {\r\n          dynamicUpdate(obj);\r\n        }}\r\n      />\r\n      <NodeCard\r\n        show={(obj) => {\r\n          setNodestate(obj);\r\n          document.getElementsByClassName(\"card-main\")[0].scrollTop = 0;\r\n        }}\r\n        toast={toast}\r\n        node={nodestate}\r\n        treeData={TreeData}\r\n        data={tableData}\r\n        update={(obj) => {\r\n          dynamicUpdate(obj);\r\n        }}\r\n        edit={() => {\r\n          openNode(currentRow);\r\n        }}\r\n        setPhoto={(photo) => {\r\n          setCurrentImage(photo);\r\n        }}\r\n      />\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* <EditPhotoCondition\r\n        image={currentImage}\r\n        setImage={(img) => setCurrentImage(img)}\r\n        node={nodestate}\r\n        update={(obj) => {\r\n          dynamicUpdate(obj);\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Error.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Tree.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Create.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\NodeCard.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Modal.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\Edit.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\React-Table-Components\\ReactTable.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\React-Table-Components\\GlobalFilter.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\NodeCardContent.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\React-Table-Components\\columns.js",[],"C:\\Users\\Jhun\\OneDrive\\Documents\\lay-family-tree\\client\\src\\components\\EditPhoto.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":32,"column":10,"nodeType":"78","messageId":"79","endLine":32,"endColumn":22},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'EditPhoto' is defined but never used.","Identifier","unusedVar","'currentImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]